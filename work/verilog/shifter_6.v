/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module shifter_6 (
    input [15:0] a,
    input [3:0] b,
    input [1:0] alufn,
    output reg [15:0] s
  );
  
  
  
  reg [15:0] w;
  
  reg [15:0] x;
  
  reg [15:0] y;
  
  reg [15:0] z;
  
  reg [15:0] si;
  
  reg j;
  
  integer i;
  
  always @* begin
    if (alufn[0+0-:1] == 1'h1) begin
      for (i = 1'h0; i < 4'hf; i = i + 1) begin
        w[(i)*1+0-:1] = a[(4'hf - i)*1+0-:1];
      end
    end else begin
      w = a;
    end
    if (alufn[1+0-:1] == 1'h1) begin
      j = a[15+0-:1];
    end else begin
      j = 1'h0;
    end
    
    case (b[3+0-:1])
      1'h0: begin
        x = w;
      end
      1'h1: begin
        x[8+7-:8] = w[0+7-:8];
        x[0+7-:8] = {4'h8{j}};
      end
      default: begin
        x = w;
      end
    endcase
    
    case (b[2+0-:1])
      1'h0: begin
        y = x;
      end
      1'h1: begin
        y[4+11-:12] = w[0+11-:12];
        y[0+3-:4] = {3'h4{j}};
      end
      default: begin
        y = x;
      end
    endcase
    
    case (b[1+0-:1])
      1'h0: begin
        z = y;
      end
      1'h1: begin
        z[2+13-:14] = y[0+13-:14];
        z[0+1-:2] = {2'h2{j}};
      end
      default: begin
        z = y;
      end
    endcase
    
    case (b[0+0-:1])
      1'h0: begin
        si = z;
      end
      1'h1: begin
        si[1+14-:15] = z[0+14-:15];
        si[0+0-:1] = j;
      end
      default: begin
        si = z;
      end
    endcase
    if (alufn[0+0-:1] == 1'h1) begin
      for (i = 1'h0; i < 4'hf; i = i + 1) begin
        s[(i)*1+0-:1] = si[(4'hf - i)*1+0-:1];
      end
    end else begin
      s = si;
    end
  end
endmodule

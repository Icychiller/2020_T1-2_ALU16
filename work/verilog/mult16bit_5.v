/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mult16bit_5 (
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out
  );
  
  
  
  integer i;
  integer j;
  
  reg [255:0] andgates;
  
  wire [(4'hf+0)*(4'hf+0)-1:0] M_adder_s;
  wire [(4'hf+0)*(4'hf+0)-1:0] M_adder_cout;
  reg [(4'hf+0)*(4'hf+0)-1:0] M_adder_a;
  reg [(4'hf+0)*(4'hf+0)-1:0] M_adder_b;
  reg [(4'hf+0)*(4'hf+0)-1:0] M_adder_cin;
  
  genvar GEN_adder0, GEN_adder1;
  generate
  for (GEN_adder0=0;GEN_adder0<4'hf;GEN_adder0=GEN_adder0+1) begin: adder_gen_0
    for (GEN_adder1=0;GEN_adder1<4'hf;GEN_adder1=GEN_adder1+1) begin: adder_gen_1
      fulladder_12 adder (
        .a(M_adder_a[GEN_adder0*(4'hf)*(1)+GEN_adder1*(1)+(1)-1-:(1)]),
        .b(M_adder_b[GEN_adder0*(4'hf)*(1)+GEN_adder1*(1)+(1)-1-:(1)]),
        .cin(M_adder_cin[GEN_adder0*(4'hf)*(1)+GEN_adder1*(1)+(1)-1-:(1)]),
        .s(M_adder_s[GEN_adder0*(4'hf)*(1)+GEN_adder1*(1)+(1)-1-:(1)]),
        .cout(M_adder_cout[GEN_adder0*(4'hf)*(1)+GEN_adder1*(1)+(1)-1-:(1)])
      );
    end
  end
  endgenerate
  
  always @* begin
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      for (j = 1'h0; j < 5'h10; j = j + 1) begin
        andgates[(i)*16+(j)*1+0-:1] = a[(j)*1+0-:1] & b[(i)*1+0-:1];
      end
    end
    M_adder_a[0+14-:15] = andgates[0+1+14-:15];
    for (i = 1'h0; i < 4'hf; i = i + 1) begin
      M_adder_b[(i)*15+14-:15] = andgates[(i + 1'h1)*16+0+14-:15];
    end
    for (i = 1'h0; i < 4'he; i = i + 1) begin
      M_adder_a[(i + 1'h1)*15+14-:15] = M_adder_s[(i)*15+1+13-:14];
    end
    for (i = 1'h0; i < 4'hf; i = i + 1) begin
      M_adder_cin[(i)*15+0+0-:1] = 1'h0;
      M_adder_cin[(i)*15+1+13-:14] = M_adder_cout[(i)*15+0+13-:14];
    end
    out[0+0-:1] = andgates[0+0+0-:1];
    for (i = 1'h1; i < 5'h10; i = i + 1) begin
      out[(i)*1+0-:1] = M_adder_s[(i - 1'h1)*15+0+0-:1];
    end
  end
endmodule
